<?xml version="1.0" encoding="UTF-8"?>
<views:DetailsViewBase
    x:TypeArguments="models:Station"
    xmlns="http://xamarin.com/schemas/2014/forms" 
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:HannerLabApp.Converters;assembly=HannerLabApp"
    xmlns:behaviours="clr-namespace:HannerLabApp.Behaviours;assembly=HannerLabApp"
    xmlns:views="clr-namespace:HannerLabApp.Views;assembly=HannerLabApp"
    xmlns:models="clr-namespace:HannerLabApp.Models;assembly=HannerLabApp"
    xmlns:fa="clr-namespace:HannerLabApp.Helpers;assembly=HannerLabApp"
    xmlns:controls="clr-namespace:HannerLabApp.Controls;assembly=HannerLabApp"
    x:Class="HannerLabApp.Views.StationViews.StationDetailsView"
    Title="{Binding Title}">

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
            <converters:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter"/>
            <converters:BoolDecisionToStringConverter x:Key="BoolDecisionToStringConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <!-- Tool bar with advanced toggle -->
    <ContentPage.ToolbarItems>
        <ToolbarItem
            Text="{Binding Path=ViewModel.IsAdvancedShown, Converter={StaticResource BoolDecisionToStringConverter}, ConverterParameter='Advanced;Basic'}"
            Command="{Binding ToggleModeCommand}"
            Order="Primary"
            Priority="0" />
    </ContentPage.ToolbarItems>

    <ContentPage.Content>
        <ScrollView>
            <Grid Padding="30">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Station User Id -->
                <StackLayout Grid.Row="0" Grid.ColumnSpan="3" IsVisible="{Binding ViewModel.IsAdvancedShown}">
                    <Label Text="{Binding ViewModel.UserSpecifiedId.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.UserSpecifiedId.Value}" 
                           Placeholder="{Binding ViewModel.UserSpecifiedId.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.UserSpecifiedId.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.UserSpecifiedId.Description}"
                           IsVisible="{Binding ViewModel.UserSpecifiedId.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.UserSpecifiedId.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.UserSpecifiedId.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- /Station User Id -->

                <!-- Station Name -->
                <StackLayout Grid.Row="1" Grid.ColumnSpan="3">
                    <Label Text="{Binding ViewModel.Name.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.Name.Value}" 
                           Placeholder="{Binding ViewModel.Name.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.Name.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.Name.Description}"
                           IsVisible="{Binding ViewModel.Name.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.Name.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.Name.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- /Station Name -->
                
                <!-- Date -->
                <StackLayout Grid.Row="2" Grid.ColumnSpan="3" IsVisible="{Binding ViewModel.IsAdvancedShown}">
                    <Label Text="{Binding ViewModel.Timestamp.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <controls:DateTimePicker DateTime="{Binding ViewModel.Timestamp.Value}" StringFormat="dd-MM-yyyy HH:mm" />

                    <Label Text="{Binding ViewModel.Timestamp.Description}"
                           IsVisible="{Binding ViewModel.Timestamp.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.Timestamp.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.Timestamp.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- /Date -->

                <!-- Station Recordedby -->
                <StackLayout Grid.Row="3" Grid.ColumnSpan="3">
                    <Label Text="{Binding ViewModel.RecordedBy.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.RecordedBy.Value}" 
                           Placeholder="{Binding ViewModel.RecordedBy.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.RecordedBy.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.RecordedBy.Description}"
                           IsVisible="{Binding ViewModel.RecordedBy.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.RecordedBy.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.RecordedBy.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- /Station RecordedBy -->

                <!-- Parent Site -->
                <StackLayout Grid.Row="4" Grid.ColumnSpan="3">
                    <Label Text="{Binding ViewModel.Site.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Picker Title="Select Site" 
                            ItemsSource="{Binding Sites, Mode=TwoWay}" 
                            ItemDisplayBinding="{Binding Name}" 
                            SelectedItem="{Binding ViewModel.Site.Value, Mode=TwoWay}" />

                    <Label Text="{Binding ViewModel.Site.Description}"
                           IsVisible="{Binding ViewModel.Site.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.Site.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.Site.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- /Site -->

                <!-- Station Description -->
                <StackLayout Grid.Row="5" Grid.ColumnSpan="3">
                    <Label Text="{Binding ViewModel.Description.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.Description.Value}" 
                           Placeholder="{Binding ViewModel.Description.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.Description.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.Description.Description}"
                           IsVisible="{Binding ViewModel.Description.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.Description.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.Description.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- /Station Description -->

                <!-- Station Latitude -->
                <StackLayout Grid.Row="6" Grid.Column="0">
                    <Label Text="{Binding ViewModel.Latitude.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.Latitude.Value}" 
                           Keyboard="Numeric"
                           Placeholder="{Binding ViewModel.Latitude.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.Latitude.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.Latitude.Description}"
                           IsVisible="{Binding ViewModel.Latitude.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.Latitude.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                       IsVisible="{Binding ViewModel.Latitude.IsValid, Converter={StaticResource InverseBoolConverter}}"
                       Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- /Station Latitude -->

                <!-- Station Latitude -->
                <StackLayout Grid.Row="6" Grid.Column="1">
                    <Label Text="{Binding ViewModel.Longitude.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.Longitude.Value}" 
                           Keyboard="Numeric"
                           Placeholder="{Binding ViewModel.Longitude.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.Longitude.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.Longitude.Description}"
                           IsVisible="{Binding ViewModel.Longitude.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.Longitude.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.Longitude.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- /Station Latitude -->

                <!-- Station Elevation -->
                <StackLayout Grid.Row="6" Grid.Column="2">
                    <Label Text="{Binding ViewModel.Elevation.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <StackLayout Orientation="Horizontal"
                                 HorizontalOptions="FillAndExpand"
                                 VerticalOptions="FillAndExpand">
                        <Entry Text="{Binding ViewModel.Elevation.Value}" 
                               Keyboard="Numeric"
                               HorizontalOptions="FillAndExpand"
                               Placeholder="{Binding ViewModel.Elevation.Title}">
                        <Entry.Behaviors>
                                <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.Elevation.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>
                        <Button Style="{x:StaticResource FontIconButtonStyle}"
                                Text="{x:Static fa:FontAwesomeIcons.Compass}"
                                FontFamily="FAS"
                                Command="{Binding DetermineGpsLocationCommand}" />
                    </StackLayout>
                    <Label Text="{Binding ViewModel.Elevation.Description}"
                           IsVisible="{Binding ViewModel.Elevation.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.Elevation.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                       IsVisible="{Binding ViewModel.Elevation.IsValid, Converter={StaticResource InverseBoolConverter}}"
                       Style="{StaticResource ValidatableErrorTextStyle}"/>
                    </StackLayout>
                <!-- /Station Longitude -->

                <!-- Station GPS waypoint -->
                <StackLayout Grid.Row="7" Grid.ColumnSpan="3" IsVisible="{Binding ViewModel.IsAdvancedShown}">
                    <Label Text="{Binding ViewModel.WayPoint.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.WayPoint.Value}" 
                           Placeholder="{Binding ViewModel.WayPoint.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.WayPoint.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.WayPoint.Description}"
                           IsVisible="{Binding ViewModel.WayPoint.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.WayPoint.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.WayPoint.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- /Station waypoint -->

                <!-- Habitat -->
                <StackLayout Grid.Row="8" Grid.ColumnSpan="3" IsVisible="{Binding ViewModel.IsAdvancedShown}">
                    <Label Text="{Binding ViewModel.Habitat.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.Habitat.Value}" 
                           Placeholder="{Binding ViewModel.Habitat.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.Habitat.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.Habitat.Description}"
                           IsVisible="{Binding ViewModel.Habitat.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.Habitat.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.Habitat.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- Habitat -->

                <!-- WaterBody -->
                <StackLayout Grid.Row="9" Grid.ColumnSpan="3" IsVisible="{Binding ViewModel.IsAdvancedShown}">
                    <Label Text="{Binding ViewModel.WaterBody.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.WaterBody.Value}" 
                           Placeholder="{Binding ViewModel.WaterBody.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.WaterBody.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.WaterBody.Description}"
                           IsVisible="{Binding ViewModel.WaterBody.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.WaterBody.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.WaterBody.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- WaterBody -->

                <!-- FloodPlain -->
                <StackLayout Grid.Row="10" Grid.ColumnSpan="3" IsVisible="{Binding ViewModel.IsAdvancedShown}">
                    <Label Text="{Binding ViewModel.FloodPlain.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.FloodPlain.Value}" 
                           Placeholder="{Binding ViewModel.FloodPlain.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.FloodPlain.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.FloodPlain.Description}"
                           IsVisible="{Binding ViewModel.FloodPlain.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.FloodPlain.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.FloodPlain.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- FloodPlain -->

                <!-- Substrate -->
                <StackLayout Grid.Row="11" Grid.ColumnSpan="3" IsVisible="{Binding ViewModel.IsAdvancedShown}">
                    <Label Text="{Binding ViewModel.Substrate.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.Substrate.Value}" 
                           Placeholder="{Binding ViewModel.Substrate.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.Substrate.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.Substrate.Description}"
                           IsVisible="{Binding ViewModel.Substrate.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.Substrate.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.Substrate.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- Substrate -->

                <!-- Geology -->
                <StackLayout Grid.Row="12" Grid.ColumnSpan="3" IsVisible="{Binding ViewModel.IsAdvancedShown}">
                    <Label Text="{Binding ViewModel.Geology.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.Geology.Value}" 
                           Placeholder="{Binding ViewModel.Geology.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.Geology.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.Geology.Description}"
                           IsVisible="{Binding ViewModel.Geology.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.Geology.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.Geology.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- Geology -->

                <!-- Hydrology -->
                <StackLayout Grid.Row="13" Grid.ColumnSpan="3" IsVisible="{Binding ViewModel.IsAdvancedShown}">
                    <Label Text="{Binding ViewModel.Hydrology.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.Hydrology.Value}" 
                           Placeholder="{Binding ViewModel.Hydrology.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.Hydrology.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.Hydrology.Description}"
                           IsVisible="{Binding ViewModel.Hydrology.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.Hydrology.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.Hydrology.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- Hydrology -->

                <!-- Stratification -->
                <StackLayout Grid.Row="14" Grid.ColumnSpan="3" IsVisible="{Binding ViewModel.IsAdvancedShown}">
                    <Label Text="{Binding ViewModel.Stratification.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.Stratification.Value}" 
                           Placeholder="{Binding ViewModel.Stratification.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.Stratification.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.Stratification.Description}"
                           IsVisible="{Binding ViewModel.Stratification.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.Stratification.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.Stratification.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- Stratification -->

                <!-- VegetationAquatic -->
                <StackLayout Grid.Row="15" Grid.ColumnSpan="3" IsVisible="{Binding ViewModel.IsAdvancedShown}">
                    <Label Text="{Binding ViewModel.VegetationAquatic.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.VegetationAquatic.Value}" 
                           Placeholder="{Binding ViewModel.VegetationAquatic.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.VegetationAquatic.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.VegetationAquatic.Description}"
                           IsVisible="{Binding ViewModel.VegetationAquatic.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.VegetationAquatic.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.VegetationAquatic.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- VegetationAquatic -->

                <!-- VegetationTerrestrial -->
                <StackLayout Grid.Row="16" Grid.ColumnSpan="3" IsVisible="{Binding ViewModel.IsAdvancedShown}">
                    <Label Text="{Binding ViewModel.VegetationTerrestrial.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.VegetationTerrestrial.Value}" 
                           Placeholder="{Binding ViewModel.VegetationTerrestrial.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.VegetationTerrestrial.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.VegetationTerrestrial.Description}"
                           IsVisible="{Binding ViewModel.VegetationTerrestrial.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.VegetationTerrestrial.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.VegetationTerrestrial.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- VegetationTerrestrial -->

                <!-- Station Notes -->
                <StackLayout Grid.Row="17" Grid.ColumnSpan="3">
                    <Label Text="{Binding ViewModel.Notes.Title}" Style="{StaticResource ValidatableTitleTextStyle}"/>
                    <Entry Text="{Binding ViewModel.Notes.Value}" 
                           Placeholder="{Binding ViewModel.Notes.Title}">
                        <Entry.Behaviors>
                            <behaviours:EntryLineValidationBehaviour IsValid="{Binding ViewModel.Notes.IsValid}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <Label Text="{Binding ViewModel.Notes.Description}"
                           IsVisible="{Binding ViewModel.Notes.IsValid}"
                           Style="{StaticResource ValidatableDescriptionTextStyle}"/>

                    <Label Text="{Binding ViewModel.Notes.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
                           IsVisible="{Binding ViewModel.Notes.IsValid, Converter={StaticResource InverseBoolConverter}}"
                           Style="{StaticResource ValidatableErrorTextStyle}"/>
                </StackLayout>
                <!-- /Station Notes -->


                <!-- Save/delete/ button -->
                <StackLayout Grid.Row="18" Grid.ColumnSpan="3"
                             Orientation="Horizontal"
                             HorizontalOptions="Center">
                    <Button Text="Save"
                            HorizontalOptions="Center"
                            WidthRequest="275"
                            Command="{Binding SaveCommand}"/>
                    <Button Text="Delete"
                            IsVisible="{Binding IsEdit}"
                            HorizontalOptions="Center"
                            WidthRequest="275"
                            Command="{Binding DeleteCommand}"/>
                </StackLayout>

            </Grid>
        </ScrollView>
    </ContentPage.Content>

</views:DetailsViewBase>